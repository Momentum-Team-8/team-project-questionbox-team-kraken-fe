{"ast":null,"code":"var _jsxFileName = \"/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { QuestionDetails } from \"./QuestionDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Question = props => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const {\n    questions\n  } = props;\n\n  const collapse = () => {\n    setExpanded;\n  };\n\n  if (expanded && selectedQuestion !== null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(QuestionDetails, {\n        question: selectedQuestion,\n        setExpanded: setExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setExpanded(false),\n        children: \"butt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    const seeDetails = question => {\n      setExpanded(true);\n      setSelectedQuestion(question);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: questions.map((question, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          onClick: seeDetails(question),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: question.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false);\n  }\n};\n\n_s(Question, \"AuzrEplJpdfTzyit0J+BGHlG47o=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/Question.js"],"names":["React","useState","QuestionDetails","Question","props","expanded","setExpanded","selectedQuestion","setSelectedQuestion","questions","collapse","seeDetails","question","map","idx","title","username","created_at"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBL,KAAtB;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACnBJ,IAAAA,WAAW;AACd,GAFD;;AAKA,MAAID,QAAQ,IAAIE,gBAAgB,KAAK,IAArC,EAA2C;AACvC,wBACI;AAAA,8BACA,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEA,gBAA3B;AAA6C,QAAA,WAAW,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADJ;AAMH,GAPD,MAOO;AACH,UAAMK,UAAU,GAAIC,QAAD,IAAc;AAC7BN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACH,KAHD;;AAIA,wBACI;AAAA,gBACKH,SAAS,CAACI,GAAV,CAAc,CAACD,QAAD,EAAWE,GAAX,KAAmB;AAC9B,4BACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,OAAO,EAAEH,UAAU,CAACC,QAAD,CAAlD;AAAA,kCACI;AAAA,sBAAKA,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIH,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAIJ,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA;AADL,qBADJ;AAcH;AACJ,CAtCM;;GAAMd,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { QuestionDetails } from \"./QuestionDetails\";\n\nexport const Question = (props) => {\n    const [expanded, setExpanded] = useState(false)\n    const [selectedQuestion, setSelectedQuestion] = useState(null)\n\n    const { questions } = props\n\n    const collapse = () => {\n        setExpanded\n    }\n\n\n    if (expanded && selectedQuestion !== null) {\n        return (\n            <>\n            <QuestionDetails question={selectedQuestion} setExpanded={setExpanded} />\n            <button onClick={() => setExpanded(false)}>butt</button>\n            </>\n        )\n    } else {\n        const seeDetails = (question) => {\n            setExpanded(true)\n            setSelectedQuestion(question)\n        }\n        return (\n            <>\n                {questions.map((question, idx) => {\n                    return (\n                        <div className=\"question-card\" onClick={seeDetails(question)}>\n                            <h2>{question.title}</h2>\n                            <p>{question.username}</p>\n                            <p>{question.created_at}</p>\n                        </div>\n                    )\n                    \n                })}\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}