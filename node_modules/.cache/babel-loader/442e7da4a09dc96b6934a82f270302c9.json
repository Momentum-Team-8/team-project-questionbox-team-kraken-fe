{"ast":null,"code":"var _jsxFileName = \"/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/NewQuestion.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewQuestion = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  const history = useHistory();\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    alert('Your question has been submitted!');\n    axios.post('https://team-kraken-questionbox.herokuapp.com/questions/create/', {\n      title: title,\n      question: text\n    }, {\n      headers: {\n        Authorization: 'Token f153b3a59878f1df3eecdd96e1a50bf5efddc43d',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response);\n    });\n    event.preventDefault();\n    setText('');\n    setTitle('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new-question-form\",\n      onSubmit: event => handleSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ask a question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"title\",\n          value: title,\n          onChange: handleTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"body\",\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"remember, be nice...\",\n          id: \"body\",\n          value: text,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewQuestion, \"dsdJgHmK2ZW0RxntUJiZZnV2Ja4=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/NewQuestion.js"],"names":["axios","React","useState","Link","useHistory","NewQuestion","text","setText","title","setTitle","history","handleChange","event","target","value","handleTitle","handleSubmit","alert","post","question","headers","Authorization","then","response","console","log","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAIH,KAAD,IAAW;AAC7BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAME,YAAY,GAAIJ,KAAD,IAAW;AAC9BK,IAAAA,KAAK,CAAC,mCAAD,CAAL;AACAjB,IAAAA,KAAK,CACFkB,IADH,CAEI,iEAFJ,EAGI;AACEV,MAAAA,KAAK,EAAEA,KADT;AAEEW,MAAAA,QAAQ,EAAEb;AAFZ,KAHJ,EAOI;AACEc,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,gDADR;AAEP,wBAAgB;AAFT;AADX,KAPJ,EAcGC,IAdH,CAcSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAhBH;AAiBAX,IAAAA,KAAK,CAACc,cAAN;AACAnB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAtBD;;AAuBA,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,QAAQ,EAAGG,KAAD,IAAWI,YAAY,CAACJ,KAAD,CAFnC;AAAA,8BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,KAAK,EAAEJ,KAFT;AAGE,UAAA,QAAQ,EAAEO;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,WAAW,EAAC,sBADd;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,KAAK,EAAET,IAHT;AAIE,UAAA,QAAQ,EAAEK;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAsBE;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8BD,CAjEM;;GAAMN,W;UAGKD,U;;;KAHLC,W","sourcesContent":["import axios from 'axios'\nimport React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport const NewQuestion = () => {\n  const [text, setText] = useState('')\n  const [title, setTitle] = useState('')\n  const history = useHistory()\n\n  const handleChange = (event) => {\n    setText(event.target.value)\n  }\n  const handleTitle = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    alert('Your question has been submitted!')\n    axios\n      .post(\n        'https://team-kraken-questionbox.herokuapp.com/questions/create/',\n        {\n          title: title,\n          question: text\n        },\n        {\n          headers: {\n            Authorization: 'Token f153b3a59878f1df3eecdd96e1a50bf5efddc43d',\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n      .then((response) => {\n        console.log(response)\n      })\n    event.preventDefault()\n    setText('')\n    setTitle('')\n  }\n  return (\n    <>\n      <form\n        className='new-question-form'\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <h3>Ask a question...</h3>\n        <div className='question-title'>\n          <label for='title'>Title</label>\n          <textarea\n            id='title'\n            value={title}\n            onChange={handleTitle}\n          />\n        </div>\n        <div className='question-text'>\n          <label for='body'>Body</label>\n          <textarea\n            placeholder='remember, be nice...'\n            id='body'\n            value={text}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <input className='submit' type='submit' value='Submit' />\n        </div>\n      </form>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}