{"ast":null,"code":"var _jsxFileName = \"/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/QuestionDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Answers } from './Answers';\nimport { Sidebar } from './Sidebar';\nimport { AnswerDetail } from './AnswerDetail';\nimport { getAnswers } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuestionDetails = props => {\n  _s();\n\n  const {\n    question,\n    setExpanded,\n    token\n  } = props;\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    getAnswers(token).then(data => {\n      setAnswers(data.data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"QuestionBox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", question.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Favorited by: \", question.favorited_by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tags: '\", question.tag, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Given Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), answers.map((answer, idx) => {\n          if (question.id === answer.question) {\n            return /*#__PURE__*/_jsxDEV(AnswerDetail, {\n              answer: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(Answers, {\n          token: token,\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuestionDetails, \"dxes/kRl333RWxkLpEqHu4XKyWs=\");\n\n_c = QuestionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/QuestionDetails.js"],"names":["React","useEffect","useState","Answers","Sidebar","AnswerDetail","getAnswers","QuestionDetails","props","question","setExpanded","token","answers","setAnswers","then","data","text","user","favorited_by","created_at","tag","map","answer","idx","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAAmCH,KAAzC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAACK,KAAD,CAAV,CACGG,IADH,CACQC,IAAI,IAAI;AACZF,MAAAA,UAAU,CAACE,IAAI,CAACA,IAAN,CAAV;AACD,KAHH;AAID,GALQ,CAAT;AAOA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCAEE;AAAA,oBAAKN,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBA,QAAQ,CAACO;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,+BAAUP,QAAQ,CAACQ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,uCAAkBR,QAAQ,CAACS,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAIT,QAAQ,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,gCAAWV,QAAQ,CAACW,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASGR,OAAO,CAACS,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC5B,cAAId,QAAQ,CAACe,EAAT,KAAgBF,MAAM,CAACb,QAA3B,EAAqC;AACnC,gCACE,QAAC,YAAD;AAAc,cAAA,MAAM,EAAEa;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;AACF,SANA,CATH,eAgBE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEX,KAAhB;AAAuB,UAAA,QAAQ,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA0BD,CArCM;;GAAMF,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Answers } from './Answers'\nimport { Sidebar } from './Sidebar'\nimport { AnswerDetail } from './AnswerDetail'\nimport { getAnswers } from '../api'\n\nexport const QuestionDetails = (props) => {\n  const { question, setExpanded, token } = props\n  const [answers, setAnswers] = useState([])\n  \n  useEffect(() => {\n    getAnswers(token)\n      .then(data => {\n        setAnswers(data.data)\n      })\n  })\n\n  return (\n    <>\n      <h1 className='title'>QuestionBox</h1>\n      <main>\n        <Sidebar />\n        <div className='question-details'>\n\n          <h1>{question.question}</h1>\n          <p className='text'>{question.text}</p>\n          <p>User: {question.user}</p>\n          <p>Favorited by: {question.favorited_by}</p>\n          <p>{question.created_at}</p>\n          <p>Tags: '{question.tag}'</p>\n          <h3>Given Answers</h3>\n          {answers.map((answer, idx) => {\n            if (question.id === answer.question) {\n              return (\n                <AnswerDetail answer={answer} />\n              )\n            }\n          })}\n          <Answers token={token} question={question} />\n        </div>\n      </main>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}