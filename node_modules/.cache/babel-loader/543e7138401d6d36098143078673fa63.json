{"ast":null,"code":"import axios from 'axios';\nexport function requestLogin(username, password) {\n  return axios.post('https://team-kraken-questionbox.herokuapp.com/auth/token/login', {\n    username: username,\n    password: password\n  });\n}\nexport function requestLogout(token) {\n  return axios.post('https://team-kraken-questionbox.herokuapp.com/auth/token/logout/', {}, {\n    headers: {\n      Authorization: `Token ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response);\n}\nexport function requestRegistration(username, email, password) {\n  return axios.post('https://team-kraken-questionbox.herokuapp.com/auth/users/', {\n    username: username,\n    email: email,\n    password: password\n  }, {}).then(response => response);\n}\nexport function requestUserInfo(token) {\n  return axios.get('https://team-kraken-questionbox.herokuapp.com/auth/users/me', {\n    headers: {\n      Authorization: `Token ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response);\n}\n\nfunction getAnswers(token) {\n  if (token) {\n    return axios.get('https://team-kraken-questionbox.herokuapp.com/answers').then(res => res);\n  }\n}\n\nexport function requestQuestions(token) {\n  return getQuestionList(token);\n}\nexport function requestAnswers(token) {\n  return getAnswers(token);\n}\n\nfunction getQuestionList(token) {\n  if (token) {\n    return axios.get('https://team-kraken-questionbox.herokuapp.com/questions').then(res => res);\n  }\n}\n\nfunction deleteQuestion(token) {\n  if (token) {}\n}","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/api.js"],"names":["axios","requestLogin","username","password","post","requestLogout","token","headers","Authorization","then","response","requestRegistration","email","requestUserInfo","get","getAnswers","res","requestQuestions","getQuestionList","requestAnswers","deleteQuestion"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,YAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C;AAChD,SAAOH,KAAK,CAACI,IAAN,CAAW,gEAAX,EAA6E;AAClFF,IAAAA,QAAQ,EAAEA,QADwE;AAElFC,IAAAA,QAAQ,EAAEA;AAFwE,GAA7E,CAAP;AAID;AAED,OAAO,SAASE,aAAT,CAAwBC,KAAxB,EAA+B;AACpC,SAAON,KAAK,CAACI,IAAN,CAAW,kEAAX,EACL,EADK,EAEL;AACEG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,SAAQF,KAAM,EADvB;AAEP,sBAAgB;AAFT;AADX,GAFK,EAQJG,IARI,CAQEC,QAAD,IAAcA,QARf,CAAP;AASD;AAED,OAAO,SAASC,mBAAT,CAA8BT,QAA9B,EAAwCU,KAAxC,EAA+CT,QAA/C,EAAyD;AAC9D,SAAOH,KAAK,CAACI,IAAN,CAAW,2DAAX,EACL;AACEF,IAAAA,QAAQ,EAAEA,QADZ;AAEEU,IAAAA,KAAK,EAAEA,KAFT;AAGET,IAAAA,QAAQ,EAAEA;AAHZ,GADK,EAML,EANK,EAQJM,IARI,CAQEC,QAAD,IAAcA,QARf,CAAP;AASD;AAED,OAAO,SAASG,eAAT,CAA0BP,KAA1B,EAAiC;AACtC,SAAON,KAAK,CAACc,GAAN,CAAU,6DAAV,EACL;AACEP,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,SAAQF,KAAM,EADvB;AAEP,sBAAgB;AAFT;AADX,GADK,EAOJG,IAPI,CAOEC,QAAD,IAAcA,QAPf,CAAP;AAQD;;AACD,SAASK,UAAT,CAAqBT,KAArB,EAA4B;AAC1B,MAAIA,KAAJ,EAAW;AACT,WAAON,KAAK,CAACc,GAAN,CAAU,uDAAV,EACJL,IADI,CACCO,GAAG,IAAIA,GADR,CAAP;AAED;AACF;;AACD,OAAO,SAASC,gBAAT,CAA2BX,KAA3B,EAAkC;AACvC,SAAOY,eAAe,CAACZ,KAAD,CAAtB;AACD;AACD,OAAO,SAASa,cAAT,CAAyBb,KAAzB,EAAgC;AACrC,SAAOS,UAAU,CAACT,KAAD,CAAjB;AACD;;AAED,SAASY,eAAT,CAA0BZ,KAA1B,EAAiC;AAC/B,MAAIA,KAAJ,EAAW;AACT,WAAON,KAAK,CAACc,GAAN,CAAU,yDAAV,EACJL,IADI,CACCO,GAAG,IAAIA,GADR,CAAP;AAED;AACF;;AAED,SAASI,cAAT,CAAyBd,KAAzB,EAAgC;AAC5B,MAAIA,KAAJ,EAAW,CAEV;AACJ","sourcesContent":["import axios from 'axios'\n\nexport function requestLogin (username, password) {\n  return axios.post('https://team-kraken-questionbox.herokuapp.com/auth/token/login', {\n    username: username,\n    password: password\n  })\n}\n\nexport function requestLogout (token) {\n  return axios.post('https://team-kraken-questionbox.herokuapp.com/auth/token/logout/',\n    {},\n    {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => response)\n}\n\nexport function requestRegistration (username, email, password) {\n  return axios.post('https://team-kraken-questionbox.herokuapp.com/auth/users/',\n    {\n      username: username,\n      email: email,\n      password: password\n    },\n    {}\n  )\n    .then((response) => response)\n}\n\nexport function requestUserInfo (token) {\n  return axios.get('https://team-kraken-questionbox.herokuapp.com/auth/users/me',\n    {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => response)\n}\nfunction getAnswers (token) {\n  if (token) {\n    return axios.get('https://team-kraken-questionbox.herokuapp.com/answers')\n      .then(res => res)\n  }\n}\nexport function requestQuestions (token) {\n  return getQuestionList(token)\n}\nexport function requestAnswers (token) {\n  return getAnswers(token)\n}\n\nfunction getQuestionList (token) {\n  if (token) {\n    return axios.get('https://team-kraken-questionbox.herokuapp.com/questions')\n      .then(res => res)\n  }\n}\n\nfunction deleteQuestion (token) {\n    if (token) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}