{"ast":null,"code":"var _jsxFileName = \"/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport './App.css';\nimport { Question } from './components/Question.js';\nimport { QuestionDetails } from './components/QuestionDetails';\nimport { Sidebar } from './components/Sidebar';\nimport { Login } from './components/Login';\nimport { QuestionList } from './components/QuestionList';\nimport { NewQuestion } from './components/NewQuestion';\nimport { requestQuestions } from './api';\nimport { requestLogout } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [data, setData] = useState([]);\n  const [token, setToken] = useLocalStorageState('token', '');\n  const [asking, setAsking] = useState(false);\n\n  function setAuthToken(token) {\n    setToken(token);\n  }\n\n  useEffect(() => {\n    if (token) {\n      requestQuestions(token).then(data => {\n        setData(data.data);\n      });\n    }\n  }, [token]);\n\n  const handleLogout = token => {\n    requestLogout(token);\n    setToken('');\n  };\n\n  if (asking) {\n    return /*#__PURE__*/_jsxDEV(NewQuestion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (token) {\n    return expanded ? /*#__PURE__*/_jsxDEV(QuestionDetails, {\n      question: selectedQuestion,\n      setExpanded: setExpanded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(QuestionList, {\n      handleLogout: handleLogout,\n      setAsking: setAsking,\n      data: data,\n      token: token,\n      setExpanded: setExpanded,\n      setSelectedQuestion: setSelectedQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setAuthToken: setAuthToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(App, \"zYdskw3HxUDl94WMGgp6mCE/Ocw=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/App.js"],"names":["React","useState","useEffect","useLocalStorageState","Question","QuestionDetails","Sidebar","Login","QuestionList","NewQuestion","requestQuestions","requestLogout","App","expanded","setExpanded","selectedQuestion","setSelectedQuestion","data","setData","token","setToken","asking","setAsking","setAuthToken","then","handleLogout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,OAAO,SAASC,GAAT,GAAgB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBjB,oBAAoB,CAAC,OAAD,EAAU,EAAV,CAA9C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASsB,YAAT,CAAuBJ,KAAvB,EAA8B;AAC5BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,KAAJ,EAAW;AACPT,MAAAA,gBAAgB,CAACS,KAAD,CAAhB,CACCK,IADD,CACMP,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACH,OAHD;AAIH;AACF,GAPQ,EAON,CAACE,KAAD,CAPM,CAAT;;AASA,QAAMM,YAAY,GAAIN,KAAD,IAAW;AAC9BR,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAME,MAAIC,MAAJ,EAAY;AACR,wBACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,MAAIF,KAAJ,EAAW;AACP,WAAON,QAAQ,gBAEP,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEE,gBAA3B;AAA6C,MAAA,WAAW,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFO,gBAIP,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEW,YAA5B;AAA0C,MAAA,SAAS,EAAEH,SAArD;AAAgE,MAAA,IAAI,EAAEL,IAAtE;AAA4E,MAAA,KAAK,EAAEE,KAAnF;AAA0F,MAAA,WAAW,EAAEL,WAAvG;AAAoH,MAAA,mBAAmB,EAAEE;AAAzI;AAAA;AAAA;AAAA;AAAA,YAJR;AAMC,GAPL,MAOW;AACH,wBACI,QAAC,KAAD;AAAO,MAAA,YAAY,EAAEO;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACR;;GA5CeX,G;UAIYT,oB;;;KAJZS,G;AA8ChB,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport './App.css'\nimport { Question } from './components/Question.js'\nimport { QuestionDetails } from './components/QuestionDetails'\nimport { Sidebar } from './components/Sidebar'\nimport { Login } from './components/Login'\nimport { QuestionList } from './components/QuestionList'\nimport { NewQuestion } from './components/NewQuestion'\nimport { requestQuestions } from './api'\nimport { requestLogout } from './api'\n\nexport function App () {\n  const [expanded, setExpanded] = useState(false)\n  const [selectedQuestion, setSelectedQuestion] = useState(null)\n  const [data, setData] = useState([])\n  const [token, setToken] = useLocalStorageState('token', '')\n  const [asking, setAsking] = useState(false)\n\n  function setAuthToken (token) {\n    setToken(token)\n  }\n\n  useEffect(() => {\n    if (token) {\n        requestQuestions(token)\n        .then(data => {\n            setData(data.data)\n        })\n    }\n  }, [token])\n\n  const handleLogout = (token) => {\n    requestLogout(token)\n    setToken('')\n  }\n\n\n    if (asking) {\n        return (\n            <NewQuestion />\n        )\n    }\n\n    if (token) { \n        return expanded\n            ?\n                <QuestionDetails question={selectedQuestion} setExpanded={setExpanded} />\n            : (\n                <QuestionList handleLogout={handleLogout} setAsking={setAsking} data={data} token={token} setExpanded={setExpanded} setSelectedQuestion={setSelectedQuestion}/>\n        )\n        } else {\n            return (\n                <Login setAuthToken={setAuthToken} />\n            )\n        }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}