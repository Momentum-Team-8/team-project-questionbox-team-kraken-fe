{"ast":null,"code":"import { useEffect, useMemo } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\nexport default function createLocalStorageStateHook(key, defaultValue) {\n  const setValueFunctions = [];\n  return function useLocalStorageStateHook() {\n    const [value, setValue, isPersistent] = useLocalStorageStateBase(key, defaultValue);\n    const setValueAll = useMemo(() => {\n      const fn = newValue => {\n        for (const setValueFunction of setValueFunctions) {\n          setValueFunction(newValue);\n        }\n      };\n\n      fn.reset = () => {\n        for (const setValueFunction of setValueFunctions) {\n          setValueFunction.reset();\n        }\n      };\n\n      return fn;\n    }, []);\n    useEffect(() => {\n      setValueFunctions.push(setValue);\n      return () => void setValueFunctions.splice(setValueFunctions.indexOf(setValue), 1);\n    }, [setValue]);\n    return [value, setValueAll, isPersistent];\n  };\n}","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/node_modules/use-local-storage-state/es/src/createLocalStorageStateHook.js"],"names":["useEffect","useMemo","useLocalStorageStateBase","createLocalStorageStateHook","key","defaultValue","setValueFunctions","useLocalStorageStateHook","value","setValue","isPersistent","setValueAll","fn","newValue","setValueFunction","reset","push","splice","indexOf"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,eAAe,SAASC,2BAAT,CAAqCC,GAArC,EAA0CC,YAA1C,EAAwD;AACnE,QAAMC,iBAAiB,GAAG,EAA1B;AACA,SAAO,SAASC,wBAAT,GAAoC;AACvC,UAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,IAAkCR,wBAAwB,CAACE,GAAD,EAAMC,YAAN,CAAhE;AACA,UAAMM,WAAW,GAAGV,OAAO,CAAC,MAAM;AAC9B,YAAMW,EAAE,GAAIC,QAAD,IAAc;AACrB,aAAK,MAAMC,gBAAX,IAA+BR,iBAA/B,EAAkD;AAC9CQ,UAAAA,gBAAgB,CAACD,QAAD,CAAhB;AACH;AACJ,OAJD;;AAKAD,MAAAA,EAAE,CAACG,KAAH,GAAW,MAAM;AACb,aAAK,MAAMD,gBAAX,IAA+BR,iBAA/B,EAAkD;AAC9CQ,UAAAA,gBAAgB,CAACC,KAAjB;AACH;AACJ,OAJD;;AAKA,aAAOH,EAAP;AACH,KAZ0B,EAYxB,EAZwB,CAA3B;AAaAZ,IAAAA,SAAS,CAAC,MAAM;AACZM,MAAAA,iBAAiB,CAACU,IAAlB,CAAuBP,QAAvB;AACA,aAAO,MAAM,KAAKH,iBAAiB,CAACW,MAAlB,CAAyBX,iBAAiB,CAACY,OAAlB,CAA0BT,QAA1B,CAAzB,EAA8D,CAA9D,CAAlB;AACH,KAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAIA,WAAO,CAACD,KAAD,EAAQG,WAAR,EAAqBD,YAArB,CAAP;AACH,GApBD;AAqBH","sourcesContent":["import { useEffect, useMemo } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\nexport default function createLocalStorageStateHook(key, defaultValue) {\n    const setValueFunctions = [];\n    return function useLocalStorageStateHook() {\n        const [value, setValue, isPersistent] = useLocalStorageStateBase(key, defaultValue);\n        const setValueAll = useMemo(() => {\n            const fn = (newValue) => {\n                for (const setValueFunction of setValueFunctions) {\n                    setValueFunction(newValue);\n                }\n            };\n            fn.reset = () => {\n                for (const setValueFunction of setValueFunctions) {\n                    setValueFunction.reset();\n                }\n            };\n            return fn;\n        }, []);\n        useEffect(() => {\n            setValueFunctions.push(setValue);\n            return () => void setValueFunctions.splice(setValueFunctions.indexOf(setValue), 1);\n        }, [setValue]);\n        return [value, setValueAll, isPersistent];\n    };\n}\n"]},"metadata":{},"sourceType":"module"}