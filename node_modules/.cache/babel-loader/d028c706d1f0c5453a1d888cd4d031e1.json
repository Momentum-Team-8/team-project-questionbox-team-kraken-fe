{"ast":null,"code":"var _jsxFileName = \"/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/NewQuestion.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Sidebar } from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewQuestion = props => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  const history = useHistory();\n  const {\n    token,\n    handleLogout\n  } = props;\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleSubmit = (event, token) => {\n    alert('Your question has been submitted!');\n    axios.post('https://team-kraken-questionbox.herokuapp.com/questions/create/', {\n      title: title,\n      question: text\n    }, {\n      headers: {\n        Authorization: `Token ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response);\n    });\n    event.preventDefault();\n    setText('');\n    setTitle('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: [\"QuestionBox\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        onClick: () => handleLogout(token),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-question-form\",\n        onSubmit: event => handleSubmit(event, token),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ask a question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"title\",\n            value: title,\n            onChange: handleTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"body\",\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"remember, be nice...\",\n            id: \"body\",\n            value: text,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit\",\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewQuestion, \"dsdJgHmK2ZW0RxntUJiZZnV2Ja4=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/components/NewQuestion.js"],"names":["axios","React","useState","Link","useHistory","Sidebar","NewQuestion","props","text","setText","title","setTitle","history","token","handleLogout","handleChange","event","target","value","handleTitle","handleSubmit","alert","post","question","headers","Authorization","then","response","console","log","preventDefault"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Sidebar } from './Sidebar'\nexport const NewQuestion = (props) => {\n  const [text, setText] = useState('')\n  const [title, setTitle] = useState('')\n  const history = useHistory()\n  const { token, handleLogout } = props\n\n  const handleChange = (event) => {\n    setText(event.target.value)\n  }\n  const handleTitle = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleSubmit = (event, token) => {\n    alert('Your question has been submitted!')\n    axios\n      .post(\n        'https://team-kraken-questionbox.herokuapp.com/questions/create/',\n        {\n          title: title,\n          question: text\n        },\n        {\n          headers: {\n            Authorization: `Token ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n      .then((response) => {\n        console.log(response)\n      })\n    event.preventDefault()\n    setText('')\n    setTitle('')\n  }\n  return (\n    <>\n      <h1 className='title'>QuestionBox<button className='logout' onClick={() => handleLogout(token)}>Logout</button></h1>\n      <main>\n        <Sidebar />\n        <form\n          className='new-question-form'\n          onSubmit={(event) => handleSubmit(event, token)}\n        >\n          <h3>Ask a question...</h3>\n          <div className='question-title'>\n            <label for='title'>Title</label>\n            <textarea\n              id='title'\n              value={title}\n              onChange={handleTitle}\n            />\n          </div>\n          <div className='question-text'>\n            <label for='body'>Body</label>\n            <textarea\n              placeholder='remember, be nice...'\n              id='body'\n              value={text}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <input className='submit' type='submit' value='Submit' />\n          </div>\n        </form>\n      </main>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}