{"ast":null,"code":"var _jsxFileName = \"/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport './App.css';\nimport { Question } from './components/Question.js';\nimport { QuestionDetails } from './components/QuestionDetails';\nimport { Sidebar } from './components/Sidebar';\nimport { Login } from './components/Login';\nimport { NewQuestion } from './components/NewQuestion';\nimport { requestQuestions } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [data, setData] = useState([]);\n  const [token, setToken] = useLocalStorageState('token', '');\n  const [asking, setAsking] = use;\n\n  function setAuthToken(token) {\n    setToken(token);\n  }\n\n  function askQuestion() {\n    return /*#__PURE__*/_jsxDEV(NewQuestion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this);\n  }\n\n  useEffect(() => {\n    if (token) {\n      requestQuestions(token) // this promise will extract the data from\n      // the api response\n      .then(data => {\n        setData(data);\n      });\n    } // re-render the component if the username\n    // or token changes\n\n  }, [token]);\n\n  if (token) {\n    return expanded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"QuestionBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(QuestionDetails, {\n          question: selectedQuestion,\n          setExpanded: setExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"QuestionBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => askQuestion(),\n            children: \"Ask a question ->\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), data.map((question, idx) => {\n            return /*#__PURE__*/_jsxDEV(Question, {\n              question: question,\n              setExpanded: setExpanded,\n              setSelectedQuestion: setSelectedQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setAuthToken: setAuthToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(App, \"VcNfoqVK87ndL8QHJjXdVHgeAGA=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/roanblanchard/momentum-assignments/team-project-questionbox-team-kraken-fe/questionbox/src/App.js"],"names":["React","useState","useEffect","useLocalStorageState","Question","QuestionDetails","Sidebar","Login","NewQuestion","requestQuestions","App","expanded","setExpanded","selectedQuestion","setSelectedQuestion","data","setData","token","setToken","asking","setAsking","use","setAuthToken","askQuestion","then","map","question","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useLocalStorageState from 'use-local-storage-state'\nimport './App.css'\nimport { Question } from './components/Question.js'\nimport { QuestionDetails } from './components/QuestionDetails'\nimport { Sidebar } from './components/Sidebar'\nimport { Login } from './components/Login'\nimport { NewQuestion } from './components/NewQuestion'\nimport { requestQuestions } from './api'\n\nexport function App () {\n  const [expanded, setExpanded] = useState(false)\n  const [selectedQuestion, setSelectedQuestion] = useState(null)\n  const [data, setData] = useState([])\n  const [token, setToken] = useLocalStorageState('token', '')\n  const [asking, setAsking] = use\n\n  function setAuthToken (token) {\n    setToken(token)\n  }\n\n  function askQuestion () {\n      return (\n          <NewQuestion />\n      )\n  }\n\n  useEffect(() => {\n\n    if (token) {\n        requestQuestions(token)\n    // this promise will extract the data from\n    // the api response\n      .then(data => {\n        setData(data)\n      })\n    }\n      // re-render the component if the username\n      // or token changes\n  }, [token])\n\n    if (token) { \n        return expanded\n            ? <>\n            <h1 className='title'>QuestionBox</h1>\n            <main>\n                <Sidebar />\n                <QuestionDetails question={selectedQuestion} setExpanded={setExpanded} />\n            </main>\n            </>\n            : (\n            <>\n                <h1 className='title'>QuestionBox</h1>\n                <main>\n                    <Sidebar />\n                    <div className='questions'>\n                        <h2>Top Questions</h2>\n                        <button onClick={() => askQuestion()}>Ask a question -></button>\n                        {data.map((question, idx) => {\n                        return (\n                            <Question question={question} setExpanded={setExpanded} setSelectedQuestion={setSelectedQuestion} />\n                        )\n                        })}\n                    </div>\n                </main>\n            </>\n        )\n        } else {\n            return (\n                <Login setAuthToken={setAuthToken} />\n            )\n        }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}